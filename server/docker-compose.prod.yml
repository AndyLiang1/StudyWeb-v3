version: "3"
services: 
  nginx: 
    image: nginx:stable-alpine
    ports: 
      - "80:80"
    volumes: 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  backend: 
    build: 
      context: .
      args: 
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_ROOT_USER=${DB_ROOT_USER}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
      - SECRET_JWT=${SECRET_JWT}
      - SECRET_EMAIL=${SECRET_EMAIL}
    depends_on:
      - mysql
    command: node index.js
    networks:
      - docker_net
  mysql: 
    image: mysql:5.7.24
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    networks:
      - docker_net
    volumes:
      - mysql-volume:/var/lib/mysql
networks:
  docker_net: {}
volumes: 
  mysql-volume: